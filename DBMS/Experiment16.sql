CREATE TABLE CUSTOMER (
    ID NUMBER PRIMARY KEY,
    NAME VARCHAR2(50),
    AGE NUMBER,
    ADDRESS VARCHAR2(100),
    SALARY NUMBER(10, 2)
);
INSERT ALL
INTO CUSTOMER (ID, NAME, AGE, ADDRESS, SALARY) VALUES (1, 'Ramesh', 32, 'Ahmedabad', 2000.00)
INTO CUSTOMER (ID, NAME, AGE, ADDRESS, SALARY) VALUES (2, 'Khilan', 25, 'Delhi', 1500.00)
 INTO CUSTOMER (ID, NAME, AGE, ADDRESS, SALARY) VALUES (3, 'Kaushik', 23, 'Kota', 2000.00)
 INTO CUSTOMER (ID, NAME, AGE, ADDRESS, SALARY) VALUES (4, 'Chaitali', 25, 'Mumbai', 6500.00)
 INTO CUSTOMER (ID, NAME, AGE, ADDRESS, SALARY) VALUES (5, 'Hardik', 27, 'Bhopal', 8500.00)
 INTO CUSTOMER (ID, NAME, AGE, ADDRESS, SALARY) VALUES (6, 'Komal', 22, 'MP', 4500.00)
SELECT * FROM DUAL;
CREATE OR REPLACE TRIGGER customer_salary_change
AFTER INSERT OR UPDATE OR DELETE ON CUSTOMER
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        DBMS_OUTPUT.PUT_LINE('New customer added with Salary: ' || :NEW.SALARY);
    
    ELSIF UPDATING THEN
        DBMS_OUTPUT.PUT_LINE('Salary updated.');
        DBMS_OUTPUT.PUT_LINE('Old Salary: ' || :OLD.SALARY);
        DBMS_OUTPUT.PUT_LINE('New Salary: ' || :NEW.SALARY);
        DBMS_OUTPUT.PUT_LINE('Salary Difference: ' || (:NEW.SALARY - :OLD.SALARY));
    
    ELSIF DELETING THEN
        DBMS_OUTPUT.PUT_LINE('Customer deleted with Salary: ' || :OLD.SALARY);
    END IF;
END;
/
